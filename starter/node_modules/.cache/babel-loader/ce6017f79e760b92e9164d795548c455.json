{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moham\\\\OneDrive\\\\Desktop\\\\nd0191-c1-myreads\\\\starter\\\\src\\\\components\\\\Search.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { search } from \"../BooksAPI\";\nimport Searchoutput from \"./comp/Searchoutput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Search = props => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const res = await search(props.searchValue);\n        setPosts(res);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    fetchData();\n  }, [props.searchValue]);\n  if (posts === undefined) {\n    return /*#__PURE__*/_jsxDEV(Searchoutput, {\n      posts: posts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 3\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n};\n_s(Search, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useEffect","search","Searchoutput","Search","props","posts","setPosts","fetchData","res","searchValue","err","console","log","undefined"],"sources":["C:/Users/moham/OneDrive/Desktop/nd0191-c1-myreads/starter/src/components/Search.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\"\r\nimport { search } from \"../BooksAPI\";\r\nimport Searchoutput from \"./comp/Searchoutput\";\r\n\r\nconst  Search =(props) => {\r\n   const [posts, setPosts] = useState([]);\r\n   useEffect( () => { \r\n      async function fetchData() {\r\n          try {\r\n              const res = await search(props.searchValue); \r\n              setPosts(res);\r\n          } catch (err) {\r\n              console.log(err);\r\n          }\r\n      }\r\n      fetchData();\r\n  },[props.searchValue] );\r\n  if(posts === undefined){\r\n    return (\r\n  <Searchoutput posts = {posts}/>\r\n     );\r\n    }\r\n    else{\r\n      return (\r\n            <>\r\n            </>\r\n         )\r\n    }\r\n}\r\n \r\nexport default Search;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,SAASC,MAAM,QAAQ,aAAa;AACpC,OAAOC,YAAY,MAAM,qBAAqB;AAAC;AAAA;AAE/C,MAAOC,MAAM,GAAGC,KAAK,IAAK;EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtCC,SAAS,CAAE,MAAM;IACd,eAAeO,SAAS,GAAG;MACvB,IAAI;QACA,MAAMC,GAAG,GAAG,MAAMP,MAAM,CAACG,KAAK,CAACK,WAAW,CAAC;QAC3CH,QAAQ,CAACE,GAAG,CAAC;MACjB,CAAC,CAAC,OAAOE,GAAG,EAAE;QACVC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MACpB;IACJ;IACAH,SAAS,EAAE;EACf,CAAC,EAAC,CAACH,KAAK,CAACK,WAAW,CAAC,CAAE;EACvB,IAAGJ,KAAK,KAAKQ,SAAS,EAAC;IACrB,oBACF,QAAC,YAAY;MAAC,KAAK,EAAIR;IAAM;MAAA;MAAA;MAAA;IAAA,QAAE;EAE7B,CAAC,MACG;IACF,oBACM,qCACG;EAEX;AACJ,CAAC;AAAA,GAxBMF,MAAM;AAAA,KAANA,MAAM;AA0Bb,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module"}